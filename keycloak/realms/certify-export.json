[
  {
    "id": "default-certify",
    "realm": "default-certify",
    "notBefore": 0,
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": true,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "7429c049-8d85-4aca-83c1-e939e834dc54",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "default-certify",
          "attributes": {}
        },
        {
          "id": "09e03544-540e-4fa1-a129-6243546cdce1",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "default-certify",
          "attributes": {}
        },
        {
          "id": "b84a7b1d-5e23-4069-babf-f1cc3d9e202f",
          "name": "admin",
          "composite": false,
          "clientRole": false,
          "containerId": "default-certify",
          "attributes": {}
        },
        {
          "id": "608ee4a3-03ec-4842-8c03-97b7b108d9dc",
          "name": "super-admin",
          "composite": false,
          "clientRole": false,
          "containerId": "test-realm",
          "attributes": {}
        },
        {
          "id": "176f6494-167e-4221-9512-973a46584323",
          "name": "tenant-admin",
          "composite": false,
          "clientRole": false,
          "containerId": "default-certify",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "c7c53ece-cc6b-4b70-a145-dfbc107add9f",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "ae5d43b6-ec7d-4cbd-a647-1ef9fdc80f5a",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "6b01cae4-618e-411a-9836-33f363dfb28f",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "b60c88c5-03a0-4095-b674-e55a940002bf",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "6bdc1c59-33ab-41fc-a28c-cd64c9cb206d",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "view-users",
                  "query-groups",
                  "query-clients",
                  "view-authorization",
                  "view-identity-providers",
                  "view-events",
                  "view-realm",
                  "query-users",
                  "manage-authorization",
                  "manage-realm",
                  "query-realms",
                  "impersonation",
                  "manage-events",
                  "manage-identity-providers",
                  "manage-clients",
                  "manage-users",
                  "view-clients",
                  "create-client"
                ]
              }
            },
            "clientRole": true,
            "containerId": "a697f265-d0e3-6921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "a762b234-afe2-44e6-b5da-6930c46c478c",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "44326b76-ae69-479d-8195-1e9cbf72b66f",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "6613478c-cb3c-4f52-af88-5665ebbf8410",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "862ca5e0-5282-4d14-ac8c-685bbde7fe3a",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "4dea8919-64c6-4abf-8042-4be63be63133",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "7c6e185d-7c27-4aa9-861e-d5d56c6f4e1e",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "b0d9250f-da7b-46f7-851e-5f9c3fd380c8",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "c1c5dff6-1708-48b2-85bb-e778cca7974c",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "d5c31a30-b23f-4b48-a19f-2d3add09914f",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "1f4c6396-8924-4ec4-aa8d-154c1d52cd8a",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "14553ca0-ede8-4bb7-b048-1a77ec742080",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "fea62d89-0bfa-42d3-9cfc-912da4df9105",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "0fd3ccbb-33ff-4a26-af1e-37a39e214692",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "aa5ea94c-232d-4132-8df5-3aa25914592a",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "5214fa22-444f-4b61-ab21-c64b26a6a342",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "a54f1189-9f88-461b-be45-6dbe1db31382",
            "attributes": {}
          }
        ],
        "ubirch-2.0-user-access-local": [
          {
            "id": "53821bd6-41b6-4ea8-9cbf-9441d0d67109",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "ef7804e8-21ef-48c5-ae00-3aa825891a99",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "7c679496-b370-4154-9436-f0136575a162",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "fa6ba180-a592-41a0-8d2b-59b327d430b4",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "421747c0-dff5-47df-2ed4-14a790601f51",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "ed1d12c3-2018-4109-8f51-ef2afbc20786",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "32cadfc1-2292-481f-8f18-30c7201d121a",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "b1dd8358-0b1f-425c-911c-b6a4be1f5594",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "bed25229-e90b-43ef-12ba-7a9232f94560",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRoles": [
      "uma_authorization",
      "offline_access"
    ],
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
      "FreeOTP",
      "Google Authenticator"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
      {
        "id": "6b99a5df-6e2d-44c0-9454-78a070b9ad40",
        "createdTimestamp": 1615987556116,
        "username": "service-account-ubirch-2.0-user-access-local",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "ubirch-2.0-user-access-local",
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "uma_authorization",
          "offline_access"
        ],
        "clientRoles": {
          "ubirch-2.0-user-access-local": [
            "uma_protection"
          ],
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "befcd666-aa30-421b-9ccf-f18dfb9aa13b",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/default-certify/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "defaultRoles": [
          "view-profile",
          "manage-account"
        ],
        "redirectUris": [
          "/realms/default-certify/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "c150ff36-d316-412d-b3ab-1a1dd5ac349d",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/default-certify/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [
          "/realms/default-certify/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "356cef5a-fa1f-45ab-a223-818f3cf08785",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "c00af025-13f3-4356-ad37-9af09de3f59d",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "a54f1189-9f88-462b-be45-6dbe1db31382",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "a697f265-d0e3-4931-8005-811f41d48a50",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "57e73861-faf2-2d6e-994f-ba569df6ddef",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/default-certify/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [
          "/admin/default-certify/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "48fc53e1-0c21-4796-bad5-c26b353df012",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "ef7804e8-22ef-48c5-ae00-3aa825891a99",
        "clientId": "ubirch-2.0-user-access-local",
        "rootUrl": "http://localhost:9101",
        "adminUrl": "http://localhost:9101/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "ca942e9b-8336-43a3-bd22-adcaf7e5222f",
        "redirectUris": [
          "http://localhost:9101/*"
        ],
        "webOrigins": [
          "http://localhost:9101/"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "authorizationServicesEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "access.token.signed.response.alg": "ES256",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "id.token.signed.response.alg": "ES256",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "947b2481-2688-45dd-8cfb-dcf2e883c66f",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3e65d79e-9a1f-4490-bca0-bdf0139f88f8",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "id": "00b8efed-7105-4069-b7ef-880aeac5634d",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "authorizationSettings": {
          "allowRemoteResourceManagement": true,
          "policyEnforcementMode": "ENFORCING",
          "resources": [
            {
              "name": "Default Resource",
              "type": "urn:ubirch-2.0-user-access-local:resources:default",
              "ownerManagedAccess": false,
              "attributes": {},
              "_id": "4a1a50be-aaf6-4654-a7b1-259976f49827",
              "uris": [
                "/*"
              ]
            }
          ],
          "policies": [
            {
              "id": "d32c960a-656c-4278-8274-0fa24e3ad15f",
              "name": "Default Policy",
              "description": "A policy that grants access only for users within this realm",
              "type": "js",
              "logic": "POSITIVE",
              "decisionStrategy": "AFFIRMATIVE",
              "config": {
                "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
              }
            },
            {
              "id": "25a9a59f-06a9-38c4-891f-3a49f6c9eafe",
              "name": "Default Permission",
              "description": "A permission that applies to the default resource type",
              "type": "resource",
              "logic": "POSITIVE",
              "decisionStrategy": "UNANIMOUS",
              "config": {
                "defaultResourceType": "urn:ubirch-2.0-user-access-local:resources:default",
                "applyPolicies": "[\"Default Policy\"]"
              }
            }
          ],
          "scopes": [],
          "decisionStrategy": "UNANIMOUS"
        }
      }
    ],
    "clientScopes": [
      {
        "id": "cb41e3dc-f1d8-4231-9942-8ea16881fc06",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "162b1996-bb12-41d2-8c2f-8cef04b69fa8",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "b93d2588-207c-4418-9b16-63ff81f3d1b1",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e5408b89-7584-4d23-8e64-ed86d55b2797",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a6a51153-dce8-49f2-94a4-ae77f3404853",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "e52cc2f9-512b-4c78-81d0-cacad489adc8",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "1fab9a18-4cc2-4951-8c22-086d0e90d85d",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "05b748fa-3037-4f27-9ced-3a416b793067",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "fcad395f-bf98-4f15-b007-48f953a0921e",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "ccd7fad9-88d1-4d99-b99e-b1808a437af2",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "2d61a770-fbb4-4c9b-8978-7ecf720a934b",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "75bfa930-b4fd-4521-b13e-fa31ab171851",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "cbb4acd3-2a46-42ac-99ce-b9915d812e55",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "c95a25da-00bb-4319-b9e7-5c80008471cb",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6ed1cde7-f840-4a0c-93ee-9e0edffdf1b6",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "304fc391-bf26-4a31-94ba-cde4453232ba",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0ef4dfc1-01ca-462e-a11f-db57a422fa1d",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "24a53063-3e63-4570-b917-6b1307b1b21f",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5df8f590-6cf8-495a-b38f-8fc9fdad8bf4",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ff736143-81b5-490d-a5fd-dbc72a068489",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "426800b6-2f13-434e-b995-b9450cc53911",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "22ad7cd1-eada-5d77-9f2c-bbebbbee24e5",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "cdcd6727-984b-4d53-bcec-cbbad6767bd2",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "72dbab5b-0844-563b-b5f9-a7d945d8c8b0",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "49e14bc0-af14-4d0e-b7f1-95ede90cd5a1",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8c6fb3b9-2d5b-48c7-b7a0-8670c583ca2d",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0f59fed0-fdf5-427f-bc17-1d20ccd5d710",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "5794adba-cb84-40a5-8df9-4232c15f036a",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "1ac8f4b1-e76e-241d-8e26-3b462c65f8ca",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "7a1df9e2-1bba-4d0c-ac8f-60fb38ace60c",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "2165c7d7-d3f5-454e-a1dc-8e96a0404b5e",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "1e305bc2-8454-4445-bfea-1da6655ea801",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          },
          {
            "id": "bc78b600-74ec-40f4-bd89-a544635ba8c5",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "b4eb965e-7521-4b3a-c7cf-d5461ca4b418",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "214d251f-4d74-4469-89c6-e39d1eeaca2e",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "roles",
      "web-origins",
      "email",
      "profile"
    ],
    "defaultOptionalClientScopes": [
      "address",
      "phone",
      "microprofile-jwt",
      "offline_access"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {
      "starttls": "",
      "auth": "",
      "port": "1025",
      "host": "mailhog-keycloak",
      "from": "test-user-users@notAnEmail.com",
      "fromDisplayName": "test-user",
      "ssl": ""
    },
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "730a9644-6cf1-474c-aeb2-57a56f0d9b22",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "saml-role-list-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-sha256-pairwise-sub-mapper"
            ]
          }
        },
        {
          "id": "3d5967be-e56a-47b1-a9dd-a88bcbead26e",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "7df3f13c-3763-4508-ab8b-74a72ef03ec1",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-role-list-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-address-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-full-name-mapper",
              "saml-user-property-mapper"
            ]
          }
        },
        {
          "id": "b3c53ebe-a924-47b2-99a5-a65fde67206d",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "14da2b43-5703-4c34-a4c6-4fabdf94117c",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "46602f81-e510-48d7-bfb6-6bbd57ca8c25",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "3b3aa376-7b53-4746-870a-b928259948e5",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "ab85f74b-9bb1-4f9b-becf-47a443c4d815",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "fab1413a-cd61-4b6a-a937-7917ef49e522",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "c70ea37b-3def-4113-b409-6f9474f14120",
          "name": "fallback-ES256",
          "providerId": "ecdsa-generated",
          "subComponents": {},
          "config": {
            "ecdsaEllipticCurveKey": [
              "P-256"
            ],
            "priority": [
              "-100"
            ]
          }
        },
        {
          "id": "d1d3be09-1b03-4fd7-8951-6ae9a5732b5e",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        },
        {
          "id": "708bcc52-dcd8-4bd9-83d4-ee3aa3d5911b",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "880b4605-6e86-4820-1a7c-a01204595319",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "e922b07d-913c-45de-98fa-b6ff5cfbff13",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "630034f6-5345-498c-8687-57dfafec72ea",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "c0ca100f-8dbc-4cf5-9841-9a1aa4421fb4",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "8b6acd17-226c-4fa2-9ee5-92c01f6c7974",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "1edd6e4e-0212-4072-8f77-b3bfc373c344",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "f81f443a-2771-4361-a2ea-dd777e7afb4a",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "be6ba558-239e-41ab-9958-672cb1370939",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "da5e6285-44a2-43e1-9c6d-b86fc22f8a4b",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "d9a80ac1-595a-4946-b32d-2189265e6fa0",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "dccf2eef-9d7a-4f91-a6dc-1852af9de6fd",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "bd5bcccd-7dd3-40d6-8dd8-5086ea0a25f0",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 30,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "c92a93cf-f5f5-4521-b34c-01d92b483b77",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "106c4ad0-3dbc-4993-82c0-37d4c1a6e77b",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "90b2e010-c788-4814-ae67-a8cc779087a2",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "113eab7e-e4fc-4a37-920f-53100e36bcba",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "983f3ee0-d31b-47d2-bbed-6f9e7feb965d",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "adafe1b8-9d9a-4d4f-a17f-7bf9dde89361",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "94ef5223-0a31-4924-9fd6-b7c8f068970a",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 40,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "41d71681-6ce4-4f0a-8822-f41817f3083b",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "44e6946e-2592-47f3-818c-6044f86dbde8",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "e8b6c8d3-c016-46a8-a8b6-4409717a321d",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 1001,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "clientOfflineSessionMaxLifespan": "0",
      "clientSessionIdleTimeout": "0",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0"
    },
    "keycloakVersion": "11.0.3",
    "userManagedAccessAllowed": false
  },
  {
    "id": "poc-certify",
    "realm": "poc-certify",
    "notBefore": 0,
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": true,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "7429c049-8f85-4aca-83c1-e939e834dc54",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "poc-certify",
          "attributes": {}
        },
        {
          "id": "09e03544-540e-4fae-a129-6243546cdce1",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "poc-certify",
          "attributes": {}
        },
        {
          "id": "b84a7b1d-5e23-4068-babf-f1cc3d9e202f",
          "name": "admin",
          "composite": false,
          "clientRole": false,
          "containerId": "poc-certify",
          "attributes": {}
        },
        {
          "id": "608ee4a3-03ec-484c-8c03-97b7b108d9dc",
          "name": "super-admin",
          "composite": false,
          "clientRole": false,
          "containerId": "test-realm",
          "attributes": {}
        },
        {
          "id": "176f6494-167e-4221-95c2-973a46584323",
          "name": "tenant-admin",
          "composite": false,
          "clientRole": false,
          "containerId": "poc-certify",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "c7c53ece-cc6b-4b70-a1a5-dfbc107add9f",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "ae5d43b6-ec7d-4ebd-a647-1ef9fdc80f5a",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "6b01cae4-618e-4a1a-9836-33f363dfb28f",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "b60c88c5-03a0-4995-b674-e55a940002bf",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "6bdc1c59-33ab-41fc-a26c-cd64c9cb206d",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "view-users",
                  "query-groups",
                  "query-clients",
                  "view-authorization",
                  "view-identity-providers",
                  "view-events",
                  "view-realm",
                  "query-users",
                  "manage-authorization",
                  "manage-realm",
                  "query-realms",
                  "impersonation",
                  "manage-events",
                  "manage-identity-providers",
                  "manage-clients",
                  "manage-users",
                  "view-clients",
                  "create-client"
                ]
              }
            },
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "a762b234-afe2-44e6-bdda-6930c46c478c",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "44326b76-ae69-479d-8194-1e9cbf72b66f",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "6613478c-cb3c-4d52-af88-5665ebbf8410",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "862ca5e0-5282-4d14-ac9c-685bbde7fe3a",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "4dea8919-64c6-4abe-8042-4be63be63133",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "7c6e185d-7c27-4aa9-86ce-d5d56c6f4e1e",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "b0d9250f-da7b-46f7-852e-5f9c3fd380c8",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "c1c5dff6-1708-48b2-84bb-e778cca7974c",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "d5c31a30-b23f-4b48-a39f-2d3add09914f",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "1f4c6396-8924-4ec4-aa8d-1f4c1d52cd8a",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "14553ca0-ede8-4bb7-b058-1a77ec742080",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "fea62d89-0bfa-42d0-9cfc-912da4df9105",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "0fd3ccbb-33ff-4ad6-af1e-37a39e214692",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          },
          {
            "id": "aa5ea94c-232d-4c32-8df5-3aa25914592a",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "a697f265-d0e3-4921-8005-811f41d48a50",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "5214fa22-444f-4b62-ab21-c64b26a6a342",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "a54f1189-9f88-461b-be45-6dbe1db31382",
            "attributes": {}
          }
        ],
        "ubirch-2.0-user-access-local": [
          {
            "id": "53821bd6-41b6-4ea8-9dbf-9441d0d67109",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "ef7804e8-21ef-48c5-ae00-3aa825891a99",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "7c679496-b370-4c54-9436-f0136575a162",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "fa6ba180-a591-41a0-8d2b-59b327d430b4",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "421747c0-dff5-47df-aed4-14a790601f51",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "ed1d12c3-2018-4e09-8f51-ef2afbc20786",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "32cadfc1-2292-48ff-8f18-30c7201d121a",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "b1dd8358-0b1f-425c-9b1c-b6a4be1f5594",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          },
          {
            "id": "bed25229-e90b-43ef-82ba-7a9232f94560",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRoles": [
      "uma_authorization",
      "offline_access"
    ],
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
      "FreeOTP",
      "Google Authenticator"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
      {
        "id": "6b99a5df-6e1d-44c0-9454-78a070b9ad40",
        "createdTimestamp": 1615987556116,
        "username": "service-account-ubirch-2.0-user-access-local",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "ubirch-2.0-user-access-local",
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "uma_authorization",
          "offline_access"
        ],
        "clientRoles": {
          "ubirch-2.0-user-access-local": [
            "uma_protection"
          ],
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "befcd666-aa30-431b-9ccf-f18dfb9aa13b",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/poc-certify/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "defaultRoles": [
          "view-profile",
          "manage-account"
        ],
        "redirectUris": [
          "/realms/poc-certify/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "c150ff36-d316-41cd-b3ab-1a1dd5ac349d",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/poc-certify/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [
          "/realms/poc-certify/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "356cef5a-faaf-45ab-a223-818f3cf08785",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "c00af025-13f3-4456-ad37-9af09de3f59d",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "a54f1189-9f88-461b-be45-6dbe1db31382",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "a697f265-d0e3-4921-8005-811f41d48a50",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "57e73861-faf2-4d6e-994f-ba569df6ddef",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/poc-certify/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [
          "/admin/poc-certify/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "48fc53e1-0c2a-4796-bad5-c26b353df012",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "ef7804e8-21ef-48c5-ae00-3aa825891a99",
        "clientId": "ubirch-2.0-user-access-local",
        "rootUrl": "http://localhost:9101",
        "adminUrl": "http://localhost:9101/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "ca942e9b-8336-43a3-bd22-adcaf7e5222f",
        "redirectUris": [
          "http://localhost:9101/*"
        ],
        "webOrigins": [
          "http://localhost:9101/"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "authorizationServicesEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "access.token.signed.response.alg": "ES256",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "id.token.signed.response.alg": "ES256",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "947b2480-2688-45dd-8cfb-dcf2e883c66f",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3e65d79e-9aaf-4490-bca0-bdf0139f88f8",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "id": "00b8efed-7c05-4069-b7ef-880aeac5634d",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "authorizationSettings": {
          "allowRemoteResourceManagement": true,
          "policyEnforcementMode": "ENFORCING",
          "resources": [
            {
              "name": "Default Resource",
              "type": "urn:ubirch-2.0-user-access-local:resources:default",
              "ownerManagedAccess": false,
              "attributes": {},
              "_id": "4a1a50be-aaf6-4654-a7b1-259976f49827",
              "uris": [
                "/*"
              ]
            }
          ],
          "policies": [
            {
              "id": "d32c960a-656c-4e78-8274-0fa24e3ad15f",
              "name": "Default Policy",
              "description": "A policy that grants access only for users within this realm",
              "type": "js",
              "logic": "POSITIVE",
              "decisionStrategy": "AFFIRMATIVE",
              "config": {
                "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
              }
            },
            {
              "id": "25a9a59f-06a9-48c4-891f-3a49f6c9eafe",
              "name": "Default Permission",
              "description": "A permission that applies to the default resource type",
              "type": "resource",
              "logic": "POSITIVE",
              "decisionStrategy": "UNANIMOUS",
              "config": {
                "defaultResourceType": "urn:ubirch-2.0-user-access-local:resources:default",
                "applyPolicies": "[\"Default Policy\"]"
              }
            }
          ],
          "scopes": [],
          "decisionStrategy": "UNANIMOUS"
        }
      }
    ],
    "clientScopes": [
      {
        "id": "cb41e3dc-f1d8-4331-9942-8ea16881fc06",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "162b1996-bb12-43d2-8c2f-8cef04b69fa8",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "b93d2588-207c-4428-9b16-63ff81f3d1b1",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e5408b89-7584-4dc3-8e64-ed86d55b2797",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a6a51153-dce8-49f1-94a4-ae77f3404853",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "e52cc2f9-512b-4c78-82d0-cacad489adc8",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "1fab9a18-4cc2-495c-8c22-086d0e90d85d",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "05b748fa-3037-4f37-9ced-3a416b793067",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "fcad395f-bf98-4f25-b007-48f953a0921e",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "ccd7fad9-88d1-4d89-b99e-b1808a437af2",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "2d61a770-fbb4-4b9b-8978-7ecf720a934b",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "75bfa930-b4fd-45c1-b13e-fa31ab171851",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "cbb4acd3-2a46-42dc-99ce-b9915d812e55",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "c95a25da-00bb-4329-b9e7-5c80008471cb",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6ed1cde7-f840-4a0b-93ee-9e0edffdf1b6",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "304fc391-bf26-4a30-94ba-cde4453232ba",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0ef4dfc1-01ca-461e-a11f-db57a422fa1d",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "24a53063-3e63-4560-b917-6b1307b1b21f",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5df8f590-6cf8-495a-b37f-8fc9fdad8bf4",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ff736143-81b5-490d-a4fd-dbc72a068489",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "426800b6-2f13-434e-b994-b9450cc53911",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "22ad7cd1-eada-4d77-9f2c-bbebbbee24e5",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "cdcd6727-984b-4d43-bcec-cbbad6767bd2",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "72dbab5b-0844-463b-b5f9-a7d945d8c8b0",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "49e14bc0-af14-4d0e-b6f1-95ede90cd5a1",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8c6fb3b9-2d5b-48c7-b7a9-8670c583ca2d",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0f59fed0-fdf5-427f-bc57-1d20ccd5d710",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "5794adba-cb84-40a5-8df4-4232c15f036a",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "1ac8f4b1-e76e-441d-8e26-3b462c65f8ca",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "7a1df9e2-1bba-4d0c-ac7f-60fb38ace60c",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "2165c7d7-d3f5-454e-a2dc-8e96a0404b5e",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "1e305bc2-8454-4435-bfea-1da6655ea801",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          },
          {
            "id": "bc78b600-74ec-40a4-bd89-a544635ba8c5",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "b4eb965e-7521-4b3a-b7cf-d5461ca4b418",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "214d251f-4d74-4459-89c6-e39d1eeaca2e",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "roles",
      "web-origins",
      "email",
      "profile"
    ],
    "defaultOptionalClientScopes": [
      "address",
      "phone",
      "microprofile-jwt",
      "offline_access"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {
      "starttls": "",
      "auth": "",
      "port": "1025",
      "host": "mailhog-keycloak",
      "from": "test-user-users@notAnEmail.com",
      "fromDisplayName": "test-user",
      "ssl": ""
    },
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "730a9644-6cf1-464c-aeb2-57a56f0d9b22",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "saml-role-list-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-sha256-pairwise-sub-mapper"
            ]
          }
        },
        {
          "id": "3d5967be-e56a-46b1-a9dd-a88bcbead26e",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "7df3f13c-3763-4408-ab8b-74a72ef03ec1",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-role-list-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-address-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-full-name-mapper",
              "saml-user-property-mapper"
            ]
          }
        },
        {
          "id": "b3c53ebe-a914-47b2-99a5-a65fde67206d",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "14da2b43-5702-4c34-a4c6-4fabdf94117c",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "46602f81-e500-48d7-bfb6-6bbd57ca8c25",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "3b3aa376-7b43-4746-870a-b928259948e5",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "ab85f74b-9bb1-4f9c-becf-47a443c4d815",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "fab1413a-cd61-4b5a-a937-7917ef49e522",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "c70ea37b-3def-4013-b409-6f9474f14120",
          "name": "fallback-ES256",
          "providerId": "ecdsa-generated",
          "subComponents": {},
          "config": {
            "ecdsaEllipticCurveKey": [
              "P-256"
            ],
            "priority": [
              "-100"
            ]
          }
        },
        {
          "id": "d1d3be09-1b03-4fc7-8951-6ae9a5732b5e",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        },
        {
          "id": "708bcc52-dcd8-4bd8-83d4-ee3aa3d5911b",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "880b4605-6e86-4820-9a7c-a01204595319",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "e922b07d-903c-45de-98fa-b6ff5cfbff13",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "630034f6-5245-498c-8687-57dfafec72ea",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "c0ca000f-8dbc-4cf5-9841-9a1aa4421fb4",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "8b6acd07-226c-4fa2-9ee5-92c01f6c7974",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "1edd6e4e-0202-4072-8f77-b3bfc373c344",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "f81f443a-2770-4361-a2ea-dd777e7afb4a",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "be6ba558-239e-40ab-9958-672cb1370939",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "da5e6285-44a2-43e0-9c6d-b86fc22f8a4b",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "d9a80ac0-595a-4946-b32d-2189265e6fa0",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "dccf1eef-9d7a-4f91-a6dc-1852af9de6fd",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "bd5bcccd-7dd2-40d6-8dd8-5086ea0a25f0",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 30,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "c92a93cf-f5f4-4521-b34c-01d92b483b77",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "106c4ad0-2dbc-4993-82c0-37d4c1a6e77b",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "90b2e910-c788-4814-ae67-a8cc779087a2",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "113eab7e-e3fc-4a37-920f-53100e36bcba",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "983f3ee0-d21b-47d2-bbed-6f9e7feb965d",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "adafe0b8-9d9a-4d4f-a17f-7bf9dde89361",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "93ef5223-0a31-4924-9fd6-b7c8f068970a",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 40,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "41d70681-6ce4-4f0a-8822-f41817f3083b",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "34e6946e-2592-47f3-818c-6044f86dbde8",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "e8b6c8d3-c016-46a8-a8b6-4409717a321d",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 1001,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "clientOfflineSessionMaxLifespan": "0",
      "clientSessionIdleTimeout": "0",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0"
    },
    "keycloakVersion": "11.0.3",
    "userManagedAccessAllowed": false
  },
  {
    "id": "master",
    "realm": "master",
    "displayName": "Keycloak",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
    "notBefore": 0,
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 60,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "091a9b44-c50c-4a72-89f7-60954dc6d3f6",
          "name": "admin",
          "description": "${role_admin}",
          "composite": true,
          "composites": {
            "realm": [
              "create-realm"
            ],
            "client": {
              "master-realm": [
                "manage-users",
                "view-events",
                "manage-events",
                "manage-authorization",
                "view-realm",
                "view-identity-providers",
                "query-realms",
                "impersonation",
                "view-users",
                "view-clients",
                "query-clients",
                "manage-clients",
                "query-groups",
                "manage-realm",
                "manage-identity-providers",
                "create-client",
                "view-authorization",
                "query-users"
              ]
            }
          },
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "9618c058-033d-4ff7-bac9-b8d9b6804c9f",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "59545b4b-6f8e-417b-9e3a-42a07816f9cb",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "1c61782b-e3ac-4fbd-ba47-064de620437d",
          "name": "create-realm",
          "description": "${role_create-realm}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        }
      ],
      "client": {
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "ab2431bf-3f33-46d9-8321-bdfb153f9b8d",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "1435e7ca-65bf-4534-9c37-16c67fd9a118",
            "attributes": {}
          }
        ],
        "master-realm": [
          {
            "id": "7fa5abde-9cd8-4621-81e5-958fe4ff87d3",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "4118dea0-39f4-4653-bf56-79022b663788",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "9a359a60-bec2-4663-a2d0-973d6b8d4a38",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "d1d04e39-7ecb-4dad-952c-2f360641250a",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "41979d46-daeb-4473-ab08-8410e83752ec",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "4ca3653f-7bd7-4fe4-b7fb-0557f771faff",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "f402930f-2195-4160-814d-ce9d89b11081",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "e8335489-d72c-4fda-a19c-d2661344c864",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "9794cf04-e792-4b12-96a1-84cf66046a1b",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "afff9ca4-3a7b-4142-a772-7d0b020e08c8",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "c7c9114d-677c-4adf-b1fc-84704707aaa7",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "b89ac62b-ba18-46a0-b733-c62e9ffd3865",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "f2c9db88-9c2b-4d6f-b3c4-c1938da97639",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "7d9b4a93-c0a2-47f4-a4f2-f0a2f991ddd4",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "b0f0b785-4116-4bc8-8eac-c2529eb0de93",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "b8d62de8-5491-4c86-95cf-7819d11ad5c8",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "9d8632c6-da7b-42ca-8d27-67c2f69cbfaf",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          },
          {
            "id": "c0fa6671-f460-46fc-8ca5-613607c5ba22",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "eb4ab19f-3577-4a79-8276-38eb21429956",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "34585771-4219-4380-a8ca-ea3d47da4ac2",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "a26f574f-56e1-4ae2-b1a9-afeccbdbe6a5",
            "attributes": {}
          },
          {
            "id": "3a6723a2-a3c2-44a9-ab98-57813e9c2d1d",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "a26f574f-56e1-4ae2-b1a9-afeccbdbe6a5",
            "attributes": {}
          },
          {
            "id": "4efd399b-2a41-46e7-9f98-cf56463ff820",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "a26f574f-56e1-4ae2-b1a9-afeccbdbe6a5",
            "attributes": {}
          },
          {
            "id": "75d7793b-1aa4-40fd-9475-70a6d7f346ef",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "a26f574f-56e1-4ae2-b1a9-afeccbdbe6a5",
            "attributes": {}
          },
          {
            "id": "c70ddf39-b770-46e3-89ef-8852653e346b",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "a26f574f-56e1-4ae2-b1a9-afeccbdbe6a5",
            "attributes": {}
          },
          {
            "id": "b2add75f-51ea-404f-bee8-ee0cf1831bb0",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "a26f574f-56e1-4ae2-b1a9-afeccbdbe6a5",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRoles": [
      "uma_authorization",
      "offline_access"
    ],
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
      "FreeOTP",
      "Google Authenticator"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
      {
        "id": "bbf3ead8-7759-4947-9fdd-9a2f0b423bee",
        "createdTimestamp": 1622627077863,
        "username": "admin",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "credentials": [
          {
            "id": "c411a79a-32d7-484f-8cb2-8adcaec3cb50",
            "type": "password",
            "createdDate": 1622627078087,
            "secretData": "{\"value\":\"ec9x38ByOBeEkevs1NF/FErcYpGCds2+eoKpugVN8Wr3s+3/61BYWG4VIbicZ1C1f3zKTdGFz5kwg4g7DzCsnw==\",\"salt\":\"PUuHzst71f0lPgfIs1TMEQ==\"}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "admin",
          "offline_access",
          "uma_authorization"
        ],
        "clientRoles": {
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "a26f574f-56e1-4ae2-b1a9-afeccbdbe6a5",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "3dc2110b-4475-41d3-a8a4-389e77d95b1a",
        "defaultRoles": [
          "manage-account",
          "view-profile"
        ],
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "9af72aa0-7bd0-4244-97da-7f331f18151c",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "409d2b40-79f7-4119-8fce-49f257e3c38b",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "c1337055-7dd5-4b1a-90e9-8d70b5cdcd8e",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "482bcade-d832-458a-89e0-e9929055085a",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "05eda815-5bcf-45a2-a6f3-e97596e25f20",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "1435e7ca-65bf-4534-9c37-16c67fd9a118",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "a11565ac-c6cf-4157-89d8-377e28bc58af",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "eb4ab19f-3577-4a79-8276-38eb21429956",
        "clientId": "master-realm",
        "name": "master Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "28bcef68-e376-469b-b1c3-1b5cbadf77f3",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "a84fe20a-24ff-4f7e-a83b-098542d2373a",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/master/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "e7e8a636-cf3b-474c-951f-63c17531a932",
        "redirectUris": [
          "/admin/master/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "ca8077f9-258c-41d6-af21-84ad20b53b1c",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "0f9230bf-5cae-4718-a282-d0dc523f2a8b",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e044dd50-7c2c-4f22-9ae3-416bc304ebd8",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "2c26aef8-8cfe-4b7a-a8e7-cee152117dfc",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "af9e0b79-1a90-4bf0-934a-b5192917e3eb",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "4a9b87df-4705-4652-97ce-fb62058d6360",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "e3ba3ac8-02fc-481f-835c-4d24db3c8349",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "0b5c4e8b-7a1e-41ea-b94a-47c8ff32b1ae",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3d9e93c4-e2b5-47bf-a78f-b744f0cc27ce",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "49721a55-4f41-4a34-a219-7f2bff42db66",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "7692920a-a8b4-4be0-8da5-2ca49efa1f43",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "7c29c52c-ca8c-490f-b6ee-b356ab12813d",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "97eef983-23f4-465c-b40b-8ac12d67f974",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "a62a506d-f70c-480f-8353-eb073cb3d59f",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "a8c70aed-e2d7-4cdb-b887-2cffc379367a",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d5efd261-acf2-4081-b08d-54f245e8a2d1",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "4a960d0c-e99a-48d1-8914-19edc0fa3bbb",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9861cdf4-a6d3-4fbc-a680-275dad476812",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "03a38b91-22d0-44b5-afb1-bb277858e9f8",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3d40f3f6-71d1-46dd-a472-a7973533064e",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "64fd3e63-eeac-4fb9-ab61-763ed15a0f5f",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "453b6061-ac15-4c79-8100-e3ae31898d27",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e3476bc6-79d3-454e-804b-c92a11c550b7",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d78395a5-bce3-4ed0-83d2-7f2949d12337",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "382fd988-faf5-4ce9-ae45-9584c9286f92",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          },
          {
            "id": "4c405040-a7d3-4d5f-abb0-76c37ea6159d",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a1011d8e-d996-4a2f-8d57-5ca7e28f6074",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3a73ef10-d12a-49b3-930f-4b38fcfcc0cc",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "d0926cac-4e5e-4787-922c-bc896da03484",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "dce206d3-5cd0-4cef-aca5-b7a0b3bcbdbb",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "c0ecdde3-4d80-4c82-afd2-0896099763f6",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e5742196-2474-4e26-b5e2-e9cd85027d5d",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          },
          {
            "id": "36618183-6035-4d30-82f6-a3fd04d06e38",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "a2d7123a-8769-4ba3-9ced-43822a59dded",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "11fa4fe4-6b7b-409d-a1ba-83d42fc0548d",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "1b7a7a2a-7d79-4d41-9db3-786457b2baf8",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "xXSSProtection": "1; mode=block",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "04de7749-de50-4147-ac79-ed129e50e745",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "7ef569aa-bff8-4cce-9c31-dbef077c6cd9",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-full-name-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "d7cf131e-7fda-495a-912e-83448d7fe79a",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "109033c2-0c6e-4a10-b6b6-e60fef9ffe60",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "06115c0e-d752-40c7-9d9e-4ab0ce3a7fb8",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "ef0a7138-783d-4631-9457-488124280316",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "44310289-cf88-44da-b3d8-14776953a7bb",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "4789cef0-441f-4965-bdcd-d5baee037559",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "saml-role-list-mapper",
              "oidc-address-mapper",
              "saml-user-attribute-mapper",
              "oidc-full-name-mapper"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "cdcd1eda-e6bf-4b78-9faf-41288ff7e48d",
          "name": "fallback-RS256",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpQIBAAKCAQEA6LaJg+ow/u+ob94FwejYrtHdF0ZeJecGN2p79gpAF8RDsJet3e/my+qaWq9VUTVX0CIIDrBBXEaCbU7rfZEM/W93Z6U1/ANOzaDf5FlODtGuCo0/qafXbh5mG6RdK3aJA8j6aOsGcscSCFQMogsxlKNiEXXmyhkhcAyBSSk1BJmZlsOa6+HpM/DrfnLVu+mgssT7sUHHM1FsJHDojVB1b01JGL2RvrvNhN45sM0uxIlg/SdXOe41WEdKjrMb5DuzlJHMS9jNalSu8ZTdSZ3K0QcyV+O14FzRi9g85EWFZNcbA44pT9/eFFqs2YcXgmdKRhFBwBxnp2ZbfNd3sclAnQIDAQABAoIBAQCNJZoG3tbU6fuZzmpjkJ1Me5HD+jREfPlyRy3kr5bsU2hTBcy5Hjc4W5U/h7URym72mI2WiyU5mLKnJgUDZiUg2qjrvnMd5cu4QOlLkTcdGeScFcwVVO3/poR8I5c3M3ArUY1Acby5hTDUyFXZOzzZULe8q2xODCwR0CPighHcNT2b9gEKy8J3XAq1YXLULAqK94TF4yjlxMV+fGO3K1yTRIxX5rq/cWSyswWYbz2C0JfocmTdkwMpCdPj1SWuMogZiOaf3BfQ2k79FiMIDFbebBb1Ae901SOGXcZDKvC+WGk8LcWgkoHvJkvikXK/2rAdFK1pqWYxQJzbhDFxoU7BAoGBAPouuWZ3sqXLoASxF0+vJM+aGkCvf4PX1Q74GAhujqhjHWGdXawCZDW/kUJ14ecyP+dONRM8PngVH8qRWpgzbrYZ5EMf7sTAECoGc3XyoQSiuyjHzFFFeBSFKsVwpL/EbG0x+LL4v328TDcpcB5DyHx/ou5ZoRuMuLKWxnleJAkpAoGBAO4f0kVzcf0zl8UIgPdFniUYtIV3aOfwPq8ZF3DzjIQWoEAfZqE119E+L5vzFEC3+YV5qGMwEBtDj2NbxBu/ytMGTxhOw6Of1Wm7TETsAYi1zn6+G5AzWy9oe9jL4+52YVSXdeS2Dg6X99JvThtHhj2rZw7ZHOWit5Bsxtwn6UZVAoGBAMC0HLqAmGp8XdU/UuVd0szVtkL86wtyw/mzv08/WUL6lTcLL4u+i9GarRi0FD0wx2gzJU6bqMJ2AvbU3yM8+pnpd5j8j72c8tZsAaNoL/6SGfdfblFrYQLtT/Skv0G22o2BYD76uwTudQZINMQbEeJTrfxJrX669ckZuebiTH+BAoGAT/QlUSZ7Lq5FFmZNjzkz6XbLHklC0yXqljZRlZ5hHvTN59njRtviVCKSL8XFlhlv0a5QqMU5kz3zBkSIq1yRiJuEsT+5FtaS/MZjzHyF41ZQOGQysw9bXaayds+2/5mGArY8YofyXloOXvz6d9RjMY+8sdKajkw9YGP1vXQ1MmUCgYEAm2XlgsiGo7fYnOBcXlyVLfeafAsvU7vbihQOOCSSRdUgRwND5K3tZfjWVr46kQU+N74U3QQD4BJLJYU5CTG7gB0cFXJjy1iHAqRZQ9un1RLk/S3uMlsqZz2I6quxmTU5u5rtNKqLGMSZWDdkLbOHfbMjErceVT+mW1ZISLpfOq4="
            ],
            "certificate": [
              "MIICmzCCAYMCBgF5zBycXTANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjEwNjAyMDk0MzE3WhcNMzEwNjAyMDk0NDU3WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDotomD6jD+76hv3gXB6Niu0d0XRl4l5wY3anv2CkAXxEOwl63d7+bL6ppar1VRNVfQIggOsEFcRoJtTut9kQz9b3dnpTX8A07NoN/kWU4O0a4KjT+pp9duHmYbpF0rdokDyPpo6wZyxxIIVAyiCzGUo2IRdebKGSFwDIFJKTUEmZmWw5rr4ekz8Ot+ctW76aCyxPuxQcczUWwkcOiNUHVvTUkYvZG+u82E3jmwzS7EiWD9J1c57jVYR0qOsxvkO7OUkcxL2M1qVK7xlN1JncrRBzJX47XgXNGL2DzkRYVk1xsDjilP394UWqzZhxeCZ0pGEUHAHGenZlt813exyUCdAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGwM/kAnPT05RkXUpbh70tioqSp/eUyT0xM87d9sl/pTEpZBTeczk44WeXc7kX+DZQAm/c40NbjAioVZQeCRssui9FgGRiuCnIBbC+BoLRo6/8Me242xqo+gWdBqoXi7N5lJsB+EkVp/gYd1GlI1Y9goK6Ba6qigLQbFMYWmvIf1+Li/bUWpfGVuekgnO3VqjwiZv9UdL9q+Q2UOD5F0snDvcpEy/cM1mQH/85m7RDJARt8ggPE9FAqlowhoPvgM7vj/8fKlF9hvELNZWf8JsSxTWlkZ5LmBmAWfN/2W6/qgwkI4+OUhVqT68mTB1IyqsmKJ5fUjh8BzXh6O+oCkwvo="
            ],
            "priority": [
              "-100"
            ],
            "algorithm": [
              "RS256"
            ]
          }
        },
        {
          "id": "4be9bf07-192c-4fc2-bf8c-d8bb95a1461a",
          "name": "fallback-HS256",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "8c34adc2-8dad-43ba-8219-0c29134abbe8"
            ],
            "secret": [
              "hnQMQAGq9VUHPdmzPyJ3RDfIntdSAm723LCDHGxVBWmDnST8sLI7zrgBDKBwKgQlNfUob9TLCI4XLL7N-xaixQ"
            ],
            "priority": [
              "-100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "425672f1-e65d-406c-8b27-cd4bc0ccf19d",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "a9a74e0b-4880-460c-9ba9-6b7a681f1873",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "1c8d611a-f87d-40cb-b4bc-3fcdae8e42e1",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "ff064347-1d38-464f-909a-e6ae9eb74e36",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "deb77257-216d-4d7c-b50e-c3324fcadfb1",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "e6fe33e9-984f-483e-9cc6-30a0e956bef5",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "f1ba0201-9aa7-48ed-b6e3-6e3edbe955f1",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "96eb1cbd-37da-4966-aa4b-e5f5674e971d",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "d1e63411-534b-4735-be96-b79c4b108ec8",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "a0ccc0f2-2448-4008-9f8c-23bdd3213d05",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "5021cc20-1eed-4f9b-aca8-d4c47791e300",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "382f172c-7e15-4030-b09b-11a6f914f981",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 30,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "0cd46948-b9df-4fb3-b89b-aff835d5a353",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "666f72d7-72c3-4eb4-98ad-430a98e426e8",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "3119e48a-c0a0-45bb-8c1d-99fba6a7b88f",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "2a92dc9a-b08b-40ab-a567-e7b191da8f45",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "6719458f-ed9a-4408-95a9-636a4b1eb6c4",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "f996a708-c921-49f9-9ed4-1577effe2fec",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "3158cadd-f22a-488b-90e9-48e4c4c620a3",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 40,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "5da71896-f79a-4708-b1cd-01c3c1737edb",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "915e4a12-0e7b-42b4-b733-9e35c2c44eb2",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "59390121-8470-42db-b70f-0288d7764fe2",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {},
    "keycloakVersion": "11.0.3",
    "userManagedAccessAllowed": false
  }
]